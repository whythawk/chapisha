# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install Ubuntu packages
      run: |
        sudo apt-get update
        sudo apt-get -y install python3-dev libevent-dev default-jre
    - name: Install and configure Poetry
      run: |
        python -m pip install --upgrade pip
        pip install -U poetry pytest
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v4
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install poetry dependencies
      run: |
        poetry install --no-interaction
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Download pandoc
      run: |
        poetry remove pypandoc --no-interaction
        poetry add pypandoc_binary --no-interaction
    - name: Test with pytest
      run: |
        poetry run pytest
